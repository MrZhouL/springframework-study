<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 自动扫描 -->
    <context:component-scan base-package="com.hwhl.yuanyu.service"/>
    <!--<context:component-scan base-package="com.hwhl.yuanyu.mapper"/>-->

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!--&lt;!&ndash; 初始化连接大小 &ndash;&gt;  -->
        <!--<property name="initialSize" value="${jdbc.initialSize}"></property>  -->
        <!--&lt;!&ndash; 连接池最大数量 &ndash;&gt;  -->
        <!--<property name="maxActive" value="${jdbc.maxActive}"></property>  -->
        <!--&lt;!&ndash; 连接池最大空闲 &ndash;&gt;  -->
        <!--<property name="maxIdle" value="${jdbc.maxIdle}"></property>  -->
        <!--&lt;!&ndash; 连接池最小空闲 &ndash;&gt;  -->
        <!--<property name="minIdle" value="${jdbc.minIdle}"></property>  -->
        <!--&lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;  -->
        <!--<property name="maxWait" value="${jdbc.maxWait}"></property>-->
    </bean>
    <!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载mybatis的全局配置文件 -->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.hwhl.yuanyu.mapper"/>
    </bean>

    <!-- 事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="create*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="end*" propagation="REQUIRED"/>
            <!-- 添加具体需要回滚的事件方法名 -->
            <tx:method name="userRegister" propagation="REQUIRED"/>
            <tx:method name="userLogin" propagation="REQUIRED"/>
            <tx:method name="userLogout" propagation="REQUIRED"/>
            <tx:method name="userLoginByPassword" propagation="REQUIRED"/>

            <!-- 添加期数的时候不需要回滚，以免后面的计算耽误时间 -->
            <tx:method name="insertLotteryNum" propagation="SUPPORTS"/>
            <tx:method name="insertReportOrders" propagation="SUPPORTS"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>

        </tx:attributes>
    </tx:advice>
    <!-- 切面 -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice"
                     pointcut="execution(* com.hwhl.yuanyu.service.*.*(..))"/>
    </aop:config>

    <!-- 开发环境配置文件 -->
    <beans profile="development">
        <context:property-placeholder location="classpath:properties/development-*.properties"/>
    </beans>

</beans>